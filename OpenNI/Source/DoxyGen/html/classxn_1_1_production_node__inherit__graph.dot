digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{xn::ProductionNode\n||+ ProductionNode()\l+ ProductionNode()\l+ GetInfo()\l+ AddNeededNode()\l+ RemoveNeededNode()\l+ IsCapabilitySupported()\l+ SetIntProperty()\l+ SetRealProperty()\l+ SetStringProperty()\l+ SetGeneralProperty()\l+ GetIntProperty()\l+ GetRealProperty()\l+ GetStringProperty()\l+ GetGeneralProperty()\l+ LockForChanges()\l+ UnlockForChanges()\l+ LockedNodeStartChanges()\l+ LockedNodeEndChanges()\l+ GetErrorStateCap()\l+ GetErrorStateCap()\l+ GetGeneralIntCap()\l+ GetContext()\l* GetContext()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node2 [label="{xn::NodeWrapper\n|- m_hNode\l- m_hShuttingDownCallback\l|+ NodeWrapper()\l+ NodeWrapper()\l+ operator=()\l+ ~NodeWrapper()\l+ operator XnNodeHandle()\l+ GetHandle()\l+ operator==()\l+ operator!=()\l+ IsValid()\l+ GetName()\l+ AddRef()\l+ Release()\l+ Ref()\l+ Unref()\l+ SetHandle()\l+ TakeOwnership()\l- ContextShuttingDownCallback()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_node_wrapper.html"];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node3 [label="{xn::Codec\n||+ Codec()\l+ Codec()\l+ GetCodecID()\l+ EncodeData()\l+ DecodeData()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_codec.html"];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node4 [label="{xn::Device\n||+ Device()\l+ Device()\l+ GetIdentificationCap()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_device.html"];
  Node1 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node5 [label="{xn::Generator\n||+ Generator()\l+ Generator()\l+ StartGenerating()\l+ IsGenerating()\l+ StopGenerating()\l+ RegisterToGenerationRunningChange()\l+ UnregisterFromGenerationRunningChange()\l+ RegisterToNewDataAvailable()\l+ UnregisterFromNewDataAvailable()\l+ IsNewDataAvailable()\l+ WaitAndUpdateData()\l+ IsDataNew()\l+ GetData()\l+ GetDataSize()\l+ GetTimestamp()\l+ GetFrameID()\l+ GetMirrorCap()\l+ GetMirrorCap()\l+ GetAlternativeViewPointCap()\l+ GetAlternativeViewPointCap()\l+ GetFrameSyncCap()\l+ GetFrameSyncCap()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_generator.html"];
  Node5 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node6 [label="{xn::AudioGenerator\n||+ AudioGenerator()\l+ AudioGenerator()\l+ GetMetaData()\l+ GetAudioBuffer()\l+ GetSupportedWaveOutputModesCount()\l+ GetSupportedWaveOutputModes()\l+ SetWaveOutputMode()\l+ GetWaveOutputMode()\l+ RegisterToWaveOutputModeChanges()\l+ UnregisterFromWaveOutputModeChanges()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_audio_generator.html"];
  Node6 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node7 [label="{xn::MockAudioGenerator\n||+ MockAudioGenerator()\l+ MockAudioGenerator()\l+ SetData()\l+ SetData()\l+ SetData()\l+ Create()\l+ CreateBasedOn()\l* Create()\l* CreateBasedOn()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_mock_audio_generator.html"];
  Node5 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node8 [label="{xn::GestureGenerator\n||+ GestureGenerator()\l+ GestureGenerator()\l+ AddGesture()\l+ RemoveGesture()\l+ GetActiveGestures()\l+ GetAllActiveGestures()\l+ EnumerateGestures()\l+ GetNumberOfAvailableGestures()\l+ EnumerateAllGestures()\l+ IsGestureAvailable()\l+ IsGestureProgressSupported()\l+ RegisterGestureCallbacks()\l+ UnregisterGestureCallbacks()\l+ RegisterToGestureChange()\l+ UnregisterFromGestureChange()\l+ RegisterToGestureIntermediateStageCompleted()\l+ UnregisterFromGestureIntermediateStageCompleted()\l+ RegisterToGestureReadyForNextIntermediateStage()\l+ UnregisterFromGestureReadyForNextIntermediateStageCallbacks()\l+ Create()\l- GestureRecognizedCallback()\l- GestureProgressCallback()\l- GestureIntermediateStageCompletedCallback()\l- GestureReadyForNextIntermediateStageCallback()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_gesture_generator.html"];
  Node5 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node9 [label="{xn::HandsGenerator\n||+ HandsGenerator()\l+ HandsGenerator()\l+ RegisterHandCallbacks()\l+ UnregisterHandCallbacks()\l+ StopTracking()\l+ StopTrackingAll()\l+ StartTracking()\l+ SetSmoothing()\l+ GetHandTouchingFOVEdgeCap()\l+ GetHandTouchingFOVEdgeCap()\l+ Create()\l- HandCreateCB()\l- HandUpdateCB()\l- HandDestroyCB()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_hands_generator.html"];
  Node5 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node10 [label="{xn::MapGenerator\n||+ MapGenerator()\l+ MapGenerator()\l+ GetSupportedMapOutputModesCount()\l+ GetSupportedMapOutputModes()\l+ SetMapOutputMode()\l+ GetMapOutputMode()\l+ GetBytesPerPixel()\l+ RegisterToMapOutputModeChange()\l+ UnregisterFromMapOutputModeChange()\l+ GetCroppingCap()\l+ GetCroppingCap()\l+ GetBrightnessCap()\l+ GetContrastCap()\l+ GetHueCap()\l+ GetSaturationCap()\l+ GetSharpnessCap()\l+ GetGammaCap()\l+ GetWhiteBalanceCap()\l+ GetBacklightCompensationCap()\l+ GetGainCap()\l+ GetPanCap()\l+ GetTiltCap()\l+ GetRollCap()\l+ GetZoomCap()\l+ GetExposureCap()\l+ GetIrisCap()\l+ GetFocusCap()\l+ GetLowLightCompensationCap()\l+ GetAntiFlickerCap()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_map_generator.html"];
  Node10 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node11 [label="{xn::DepthGenerator\n||+ DepthGenerator()\l+ DepthGenerator()\l+ GetMetaData()\l+ GetDepthMap()\l+ GetDeviceMaxDepth()\l+ GetFieldOfView()\l+ RegisterToFieldOfViewChange()\l+ UnregisterFromFieldOfViewChange()\l+ ConvertProjectiveToRealWorld()\l+ ConvertRealWorldToProjective()\l+ GetUserPositionCap()\l+ GetUserPositionCap()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_depth_generator.html"];
  Node11 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node12 [label="{xn::MockDepthGenerator\n||+ MockDepthGenerator()\l+ MockDepthGenerator()\l+ SetData()\l+ SetData()\l+ SetData()\l+ Create()\l+ CreateBasedOn()\l* Create()\l* CreateBasedOn()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_mock_depth_generator.html"];
  Node10 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node13 [label="{xn::ImageGenerator\n||+ ImageGenerator()\l+ ImageGenerator()\l+ GetMetaData()\l+ GetRGB24ImageMap()\l+ GetYUV422ImageMap()\l+ GetGrayscale8ImageMap()\l+ GetGrayscale16ImageMap()\l+ GetImageMap()\l+ IsPixelFormatSupported()\l+ SetPixelFormat()\l+ GetPixelFormat()\l+ RegisterToPixelFormatChange()\l+ UnregisterFromPixelFormatChange()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_image_generator.html"];
  Node13 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node14 [label="{xn::MockImageGenerator\n||+ MockImageGenerator()\l+ MockImageGenerator()\l+ SetData()\l+ SetData()\l+ SetData()\l+ Create()\l+ CreateBasedOn()\l* Create()\l* CreateBasedOn()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_mock_image_generator.html"];
  Node10 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node15 [label="{xn::IRGenerator\n||+ IRGenerator()\l+ IRGenerator()\l+ GetMetaData()\l+ GetIRMap()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_i_r_generator.html"];
  Node15 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node16 [label="{xn::MockIRGenerator\n||+ MockIRGenerator()\l+ MockIRGenerator()\l+ SetData()\l+ SetData()\l+ SetData()\l+ Create()\l+ CreateBasedOn()\l* Create()\l* CreateBasedOn()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_mock_i_r_generator.html"];
  Node10 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node17 [label="{xn::SceneAnalyzer\n||+ SceneAnalyzer()\l+ SceneAnalyzer()\l+ GetMetaData()\l+ GetLabelMap()\l+ GetFloor()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_scene_analyzer.html"];
  Node5 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node18 [label="{xn::MockRawGenerator\n||+ MockRawGenerator()\l+ MockRawGenerator()\l+ SetData()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_mock_raw_generator.html"];
  Node5 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node19 [label="{xn::UserGenerator\n||+ UserGenerator()\l+ UserGenerator()\l+ GetNumberOfUsers()\l+ GetUsers()\l+ GetCoM()\l+ GetUserPixels()\l+ RegisterUserCallbacks()\l+ UnregisterUserCallbacks()\l+ GetSkeletonCap()\l+ GetSkeletonCap()\l+ GetPoseDetectionCap()\l+ GetPoseDetectionCap()\l+ RegisterToUserExit()\l+ UnregisterFromUserExit()\l+ RegisterToUserReEnter()\l+ UnregisterFromUserReEnter()\l+ Create()\l- NewUserCallback()\l- LostUserCallback()\l- UserSingleCallback()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_user_generator.html"];
  Node1 -> Node20 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node20 [label="{xn::Player\n||+ Player()\l+ Player()\l+ SetRepeat()\l+ SetSource()\l+ GetSource()\l+ ReadNext()\l+ SeekToTimeStamp()\l+ SeekToFrame()\l+ TellTimestamp()\l+ TellFrame()\l+ GetNumFrames()\l+ GetSupportedFormat()\l+ EnumerateNodes()\l+ IsEOF()\l+ RegisterToEndOfFileReached()\l+ UnregisterFromEndOfFileReached()\l+ SetPlaybackSpeed()\l+ GetPlaybackSpeed()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_player.html"];
  Node1 -> Node21 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node21 [label="{xn::Recorder\n||+ Recorder()\l+ Recorder()\l+ SetDestination()\l+ GetDestination()\l+ AddNodeToRecording()\l+ RemoveNodeFromRecording()\l+ Record()\l+ Create()\l* Create()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_recorder.html"];
  Node1 -> Node22 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node22 [label="{xn::ScriptNode\n||+ ScriptNode()\l+ ScriptNode()\l+ GetSupportedFormat()\l+ LoadScriptFromFile()\l+ LoadScriptFromString()\l+ Create()\l+ Run()\l* Create()\l* Run()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classxn_1_1_script_node.html"];
}
